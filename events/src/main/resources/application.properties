# Kafka bootstrap applies to all topics
kafka.bootstrap.servers=localhost:9092

quarkus.http.port=8087

# Change port for tests to avoid messing with local Kafka instance
%test.quarkus.http.port=9087
%test.quarkus.http.test-port=9087

# Insights client
# quarkus.redhat.insights.name=runtimes-inventory

# Kafka boilerplate
kafka.sasl.jaas.config = ""
kafka.sasl.mechanism = PLAIN
kafka.security.protocol = PLAINTEXT
kafka.ssl.truststore.location = ""
kafka.ssl.truststore.type = PEM

# Input queue
mp.messaging.incoming.ingress.connector=smallrye-kafka
mp.messaging.incoming.ingress.topic=platform.upload.announce
mp.messaging.incoming.ingress.group.id=runtimes-java-general

# Egg queue
mp.messaging.incoming.egg.connector=smallrye-kafka
mp.messaging.incoming.egg.topic=platform.inventory.events
mp.messaging.incoming.egg.group.id=runtimes-java-general

# configure your datasource
#quarkus.datasource.db-kind=postgresql
#quarkus.datasource.username=postgres
#quarkus.datasource.password=postgres
#quarkus.datasource.jdbc.url=jdbc:postgresql://127.0.0.1:5432/runtimes
#quarkus.datasource.jdbc.driver=io.opentelemetry.instrumentation.jdbc.OpenTelemetryDriver

# Verbose logging of SQL statements - disable in production
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect
quarkus.hibernate-orm.physical-naming-strategy=com.redhat.runtimes.inventory.models.SnakeCasePhysicalNamingStrategy

# Do we need this in staging?
quarkus.flyway.migrate-at-start=true
# Flyway must NOT clean the DB when the 'prod' profile is active ?
quarkus.flyway.clean-at-start=true
# FIXME: Does this option allow us to change the 1.0.0 schema?
#%test.quarkus.flyway.migrate-at-start=true

%stage.quarkus.hibernate-orm.database.generation=update
%stage.quarkus.hibernate-orm.sql-load-script=no-file

quarkus.http.access-log.enabled=true
quarkus.http.access-log.category=access_log
quarkus.http.access-log.pattern=combined
quarkus.log.category."com.redhat.cloud.notifications".level=INFO

%test.quarkus.http.access-log.category=info

# IT User service
# these entries are needed because of a bug in quarkus: https://github.com/quarkusio/quarkus/issues/8384
%prod.quarkus.rest-client.it-s2s.url=FILL_ME
%prod.quarkus.rest-client.it-s2s.key-store=file:${QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_FILE:FILL_ME}
%prod.quarkus.rest-client.it-s2s.key-store-password=${QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_PASSWORD:FILL_ME}

# Quarkus since 1.11 redirects non-apps to /q/. We need to prevent this
quarkus.http.non-application-root-path=/

# Sentry logging. Off by default, enabled on OpenShift
# See https://quarkus.io/guides/logging-sentry#in-app-packages
quarkus.log.sentry=false
quarkus.log.sentry.in-app-packages=*
quarkus.log.sentry.dsn=FILL_ME

# qute
quarkus.qute.property-not-found-strategy=throw-exception

quarkus.log.level=INFO
quarkus.log.cloudwatch.enabled=false
quarkus.log.cloudwatch.region=us-east-1
quarkus.log.cloudwatch.log-group=notificationsLogGroup
quarkus.log.cloudwatch.log-stream-name=notifications-backend
quarkus.log.cloudwatch.level=INFO
quarkus.log.cloudwatch.access-key-id=placeholder
quarkus.log.cloudwatch.access-key-secret=placeholder

quarkus.log.category."com.redhat.cloud.notifications.health.KafkaConsumedTotalChecker".level=DEBUG

quarkus.rest-client.ob.url=https://bridge.acme.org
quarkus.rest-client.kc.url=https://keycloak.acme.org

# Sources integration URLs and details. It is used to store the secrets' data for the camel and webhook endpoints.
quarkus.rest-client.sources.read-timeout=1000
quarkus.rest-client.sources.url=${clowder.endpoints.sources-api-svc:http://localhost:8000}

# Disable for now
quarkus.opentelemetry.enabled=false
quarkus.opentelemetry.tracer.exporter.otlp.endpoint=http://localhost:4317
