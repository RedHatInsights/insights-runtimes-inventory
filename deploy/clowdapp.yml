apiVersion: v1
kind: Template
metadata:
  name: runtimes-inventory
objects:
  - apiVersion: cloud.redhat.com/v1alpha1
    kind: ClowdApp
    metadata:
      name: runtimes-inventory
    spec:
      cyndi:
        {}
      envName: ${ENV_NAME}
      database:
        name: runtimes
        version: 15
      deployments:
        - metadata: {}
          minReplicas: 1
          name: service
          podSpec:
            image: quay.io/${IMAGE_NAMESPACE}/insights-rbi-events:${IMAGE_TAG}
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /health/live
                port: 8000
                scheme: HTTP
              initialDelaySeconds: 35
              periodSeconds: 5
              successThreshold: 1
              timeoutSeconds: 120
            metadata: {}
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /health/ready
                port: 8000
                scheme: HTTP
              initialDelaySeconds: 35
              periodSeconds: 5
              successThreshold: 1
              timeoutSeconds: 120
            resources: {}
            volumeMounts:
              - mountPath: /tmp
                name: tmpdir
            volumes:
              - emptyDir: {}
                name: tmpdir
            env:
              - name: QUARKUS_PROFILE
                value: ${ENV_NAME}
              - name: QUARKUS_LOG_CLOUDWATCH_ENABLED
                value: ${CLOUDWATCH_ENABLED}
          webServices:
            metrics: {}
            private: {}
            public:
              # This can override the service name
              apiPath: insights-rbi-events
              enabled: true
        - metadata: {}
          minReplicas: 1
          name: rest
          podSpec:
            image: quay.io/${IMAGE_NAMESPACE}/insights-rbi-rest:${IMAGE_TAG}
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /health/live
                port: 8000
                scheme: HTTP
              initialDelaySeconds: 35
              periodSeconds: 5
              successThreshold: 1
              timeoutSeconds: 120
            metadata: {}
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /health/ready
                port: 8000
                scheme: HTTP
              initialDelaySeconds: 35
              periodSeconds: 5
              successThreshold: 1
              timeoutSeconds: 120
            resources: {}
            volumeMounts:
              - mountPath: /tmp
                name: tmpdir
            volumes:
              - emptyDir: {}
                name: tmpdir
            env:
              - name: QUARKUS_PROFILE
                value: ${ENV_NAME}
              - name: QUARKUS_LOG_CLOUDWATCH_ENABLED
                value: ${CLOUDWATCH_ENABLED}
          webServices:
            metrics: {}
            private: {}
            public:
              # This overrides the service name
              apiPath: runtimes-inventory-service
              enabled: true
      # platform.upload.runtimes-java-general
      kafkaTopics:
        - partitions: 3
          replicas: 3
          topicName: platform.upload.announce
      dependencies:
        - ingress
        - host-inventory
        - rbac
      testing:
        iqePlugin: ''
parameters:
  - name: IMAGE_TAG
    value: latest
    displayName: the imageTag to deploy
  - name: IMAGE_NAMESPACE
    value: cloudservices
    displayName: the image namespace to deploy
  - name: ENV_NAME
    required: true
    value: stage
  - name: CLOUDWATCH_ENABLED
    value: "false"
    displayName: Enable Cloudwatch logging
