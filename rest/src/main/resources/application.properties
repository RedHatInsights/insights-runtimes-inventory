quarkus.http.port=8087

# Change port for tests to avoid messing with local Kafka instance
%test.quarkus.http.port=9087
%test.quarkus.http.test-port=9087

# Insights client
# quarkus.redhat.insights.name=runtimes-inventory

# configure your datasource
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.datasource.jdbc.url=jdbc:postgresql://127.0.0.1:5432/runtimes
#quarkus.datasource.jdbc.driver=io.opentelemetry.instrumentation.jdbc.OpenTelemetryDriver

# Verbose logging of SQL statements - disable in production
quarkus.hibernate-orm.log.sql=false
quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect
quarkus.hibernate-orm.physical-naming-strategy=com.redhat.runtimes.inventory.models.SnakeCasePhysicalNamingStrategy

quarkus.http.access-log.enabled=true
quarkus.http.access-log.category=access_log
quarkus.http.access-log.pattern=combined
quarkus.log.category."com.redhat.cloud.notifications".level=INFO

%prod.quarkus.http.access-log.category=info

# IT User service
# these entries are needed because of a bug in quarkus: https://github.com/quarkusio/quarkus/issues/8384
%prod.quarkus.rest-client.it-s2s.url=FILL_ME
%prod.quarkus.rest-client.it-s2s.key-store=file:${QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_FILE:FILL_ME}
%prod.quarkus.rest-client.it-s2s.key-store-password=${QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_PASSWORD:FILL_ME}

# Quarkus since 1.11 redirects non-apps to /q/. We need to prevent this
quarkus.http.non-application-root-path=/

# Sentry logging. Off by default, enabled on OpenShift
# See https://quarkus.io/guides/logging-sentry#in-app-packages
quarkus.log.sentry=false
quarkus.log.sentry.in-app-packages=*
quarkus.log.sentry.dsn=FILL_ME

# qute
quarkus.qute.property-not-found-strategy=throw-exception

quarkus.log.level=INFO
quarkus.log.cloudwatch.enabled=false
quarkus.log.cloudwatch.log-stream-name=insights-rbi-rest
quarkus.log.cloudwatch.level=INFO
# These properties are overriden by Clowder config
quarkus.log.cloudwatch.region=placeholder
quarkus.log.cloudwatch.log-group=placeholder
quarkus.log.cloudwatch.access-key-id=placeholder
quarkus.log.cloudwatch.access-key-secret=placeholder

%stage.quarkus.log.category."com.redhat.cloud.notifications.health.KafkaConsumedTotalChecker".level=DEBUG
%prod.quarkus.log.category."com.redhat.cloud.notifications.health.KafkaConsumedTotalChecker".level=INFO

quarkus.rest-client.ob.url=https://bridge.acme.org
quarkus.rest-client.kc.url=https://keycloak.acme.org

# Sources integration URLs and details. It is used to store the secrets' data for the camel and webhook endpoints.
quarkus.rest-client.sources.read-timeout=1000
quarkus.rest-client.sources.url=${clowder.endpoints.sources-api-svc:http://localhost:8000}

# RBAC configuration used during user authentication. It is used when a public REST API is called.
rbac.enabled=true
quarkus.rest-client.rbac-authentication.url=${clowder.endpoints.rbac-service.url:https://ci.cloud.redhat.com}
quarkus.rest-client.rbac-authentication.trust-store=${clowder.endpoints.rbac-service.trust-store-path}
quarkus.rest-client.rbac-authentication.trust-store-password=${clowder.endpoints.rbac-service.trust-store-password}
quarkus.rest-client.rbac-authentication.trust-store-type=${clowder.endpoints.rbac-service.trust-store-type}
quarkus.rest-client.rbac-authentication.connect-timeout=2000
quarkus.rest-client.rbac-authentication.read-timeout=2000

# Duration rbac entries are kept in cache
quarkus.cache.caffeine.rbac-cache.expire-after-write=PT120s

quarkus.opentelemetry.enabled=false
quarkus.opentelemetry.tracer.exporter.otlp.endpoint=http://localhost:4317
