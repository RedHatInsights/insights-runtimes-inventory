<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.redhat.insights</groupId>
    <artifactId>runtimes-inventory</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <artifactId>runtimes-inventory-events</artifactId>

  <!--  <properties>-->
  <!--    <enforcer-plugin.version>3.1.0</enforcer-plugin.version>-->
  <!--    <maven-minimum-version>3.8.4</maven-minimum-version>-->
  <!--    <java-version>17</java-version>-->
  <!--    <compiler-plugin.version>3.10.1</compiler-plugin.version>-->
  <!--    <maven.compiler.parameters>true</maven.compiler.parameters>-->
  <!--    <maven.compiler.source>${java-version}</maven.compiler.source>-->
  <!--    <maven.compiler.target>${java-version}</maven.compiler.target>-->
  <!--    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>-->
  <!--    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>-->
  <!--    <skip.spotless>false</skip.spotless>-->

  <!--    <google-java-format.version>1.15.0</google-java-format.version>-->
  <!--    <spotless-maven-plugin.version>2.29.0</spotless-maven-plugin.version>-->
  <!--    <surefire-plugin.version>3.0.0-M8</surefire-plugin.version>-->
  <!--    <checkstyle-plugin.version>3.2.1</checkstyle-plugin.version>-->
  <!--    <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>-->
  <!--    <jacoco-plugin.version>0.8.8</jacoco-plugin.version>-->
  <!--    <checkstyle.version>10.6.0</checkstyle.version>-->

  <!--    <testcontainers.version>1.17.6</testcontainers.version>-->
  <!--    <version.cloud-commons>0.1.1</version.cloud-commons>-->
  <!--    <openapi-parser.version>4.0.4</openapi-parser.version>-->
  <!--    <failsafe.version>3.3.0</failsafe.version>-->

  <!--    <mockserver-netty-no-dependencies.version>5.15.0</mockserver-netty-no-dependencies.version>-->

  <!--    <insights-notification-schemas-java.version>0.18</insights-notification-schemas-java.version>-->
  <!--    <clowder-quarkus-config-source.version>1.3.0</clowder-quarkus-config-source.version>-->

  <!--    <quarkus-logging-cloudwatch.version>5.2.0</quarkus-logging-cloudwatch.version>-->
  <!--    <quarkus-logging-sentry.version>1.2.1</quarkus-logging-sentry.version>-->
  <!--    <quarkus-hibernate-types.version>1.0.1</quarkus-hibernate-types.version>-->

  <!--    <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>-->
  <!--    <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>-->
  <!--    <quarkus.platform.version>2.15.3.Final</quarkus.platform.version>-->
  <!--  </properties>-->

  <!--  <dependencyManagement>-->
  <!--    <dependencies>-->
  <!--      <dependency>-->
  <!--        <groupId>${quarkus.platform.group-id}</groupId>-->
  <!--        <artifactId>${quarkus.platform.artifact-id}</artifactId>-->
  <!--        <version>${quarkus.platform.version}</version>-->
  <!--        <type>pom</type>-->
  <!--        <scope>import</scope>-->
  <!--      </dependency>-->
  <!--    </dependencies>-->
  <!--  </dependencyManagement>-->

  <dependencies>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>runtimes-inventory-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- Quarkus -->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-cache</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-flyway</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-orm</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-validator</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkiverse.hibernatetypes</groupId>
      <artifactId>quarkus-hibernate-types</artifactId>
      <version>${quarkus-hibernate-types.version}</version>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jdbc-postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkiverse.loggingsentry</groupId>
      <artifactId>quarkus-logging-sentry</artifactId>
      <version>${quarkus-logging-sentry.version}</version>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-rest-client-reactive</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-reactive-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-qute</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-reactive-messaging-kafka</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-scheduler</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-opentelemetry</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-extension-trace-propagators</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-micrometer-registry-prometheus</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry.instrumentation</groupId>
      <artifactId>opentelemetry-jdbc</artifactId>
    </dependency>

    <!-- Test our Extension -->
    <!--    <dependency>-->
    <!--      <groupId>io.quarkiverse</groupId>-->
    <!--      <artifactId>quarkus-redhat-insights</artifactId>-->
    <!--      <version>999-SNAPSHOT</version>-->
    <!--    </dependency>-->

    <!-- Quarkus BOM -->
    <dependency>
      <groupId>io.smallrye.reactive</groupId>
      <artifactId>smallrye-mutiny-vertx-web-client</artifactId>
    </dependency>

    <!-- Clowder -->
    <dependency>
      <groupId>com.redhat.cloud.common</groupId>
      <artifactId>clowder-quarkus-config-source</artifactId>
      <version>${clowder-quarkus-config-source.version}</version>
    </dependency>

    <!-- CloudWatch -->
    <dependency>
      <groupId>io.quarkiverse.logging.cloudwatch</groupId>
      <artifactId>quarkus-logging-cloudwatch</artifactId>
      <version>${quarkus-logging-cloudwatch.version}</version>
    </dependency>

    <!-- Retries -->
    <dependency>
      <groupId>dev.failsafe</groupId>
      <artifactId>failsafe</artifactId>
      <version>${failsafe.version}</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5-mockito</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.smallrye.reactive</groupId>
      <artifactId>smallrye-reactive-messaging-in-memory</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>mockserver</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mock-server</groupId>
      <artifactId>mockserver-netty-no-dependencies</artifactId>
      <version>${mockserver-netty-no-dependencies.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Plugins -->
    <dependency>
      <groupId>com.diffplug.spotless</groupId>
      <artifactId>spotless-maven-plugin</artifactId>
      <version>${spotless-maven-plugin.version}</version>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.platform.version}</version>
        <extensions>true</extensions>
        <configuration>
          <debug>5008</debug>
          <suspend>false</suspend>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.github.git-commit-id</groupId>
        <artifactId>git-commit-id-maven-plugin</artifactId>
        <version>5.0.0</version>
        <configuration>
          <includeOnlyProperties>
            <includeOnlyProperty>git.commit.id.abbrev</includeOnlyProperty>
          </includeOnlyProperties>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless-maven-plugin.version}</version>
        <configuration>
          <skip>${skip.spotless}</skip>
          <!-- optional: limit format enforcement to just the files changed by this feature branch -->
          <ratchetFrom>origin/master</ratchetFrom>
          <formats>
            <!-- you can define as many formats as you want, each is independent -->
            <format>
              <!-- define the files to apply to -->
              <includes>
                <!--                <include>*.md</include>-->
                <include>.gitignore</include>
              </includes>
              <!-- define the steps to apply to those files -->
              <trimTrailingWhitespace></trimTrailingWhitespace>
              <endWithNewline></endWithNewline>
              <indent>
                <tabs>true</tabs>
                <spacesPerTab>4</spacesPerTab>
              </indent>
            </format>
          </formats>
          <!-- define a language-specific format -->
          <java>
            <!-- no need to specify files, inferred automatically, but you can if you want -->

            <!-- apply a specific flavor of google-java-format and reflow long strings -->
            <googleJavaFormat>
              <version>${google-java-format.version}</version>
              <style>GOOGLE</style>
              <reflowLongStrings>true</reflowLongStrings>
              <groupArtifact>com.google.googlejavaformat:google-java-format</groupArtifact>
            </googleJavaFormat>

            <!-- make sure every file has the following copyright header.
                     optionally, Spotless can set copyright years by digging
                     through git history (see "license" section below) -->
            <licenseHeader>
              <content>/* Copyright (C) Red Hat $YEAR */</content>
              <!-- or <file>${project.basedir}/license-header</file> -->
            </licenseHeader>
          </java>
          <pom>
            <includes>
              <include>pom.xml</include>
            </includes>
            <sortPom></sortPom>
          </pom>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>compile</phase>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
</project>
