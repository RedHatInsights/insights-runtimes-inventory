apiVersion: v1
kind: Template
metadata:
  name: runtimes-inventory
objects:
  - apiVersion: cloud.redhat.com/v1alpha1
    kind: ClowdApp
    metadata:
      name: runtimes-inventory
    spec:
      cyndi:
        {}
      envName: ${ENV_NAME}
      database:
        name: runtimes
        version: 15
      deployments:
        - metadata: {}
          minReplicas: ${{MIN_REPLICAS}}
          name: service
          podSpec:
            image: quay.io/${IMAGE_NAMESPACE}/insights-rbi-events:${IMAGE_TAG}
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /health/live
                port: 8000
                scheme: HTTP
              initialDelaySeconds: 35
              periodSeconds: 5
              successThreshold: 1
              timeoutSeconds: 120
            metadata: {}
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /health/ready
                port: 8000
                scheme: HTTP
              initialDelaySeconds: 35
              periodSeconds: 5
              successThreshold: 1
              timeoutSeconds: 120
            resources:
              limits:
                cpu: "4"
                memory: 20Gi
              requests:
                cpu: "2"
                memory: 1Gi
            volumeMounts:
              - mountPath: /tmp
                name: tmpdir
              - mountPath: /var/run/secrets/com.redhat.insights/jmx-auth
                name: jmx-auth
                readOnly: true
              - mountPath: /var/run/secrets/com.redhat.insights/jmx-tls
                name: jmx-tls
                readOnly: true
              - name: keystore-volume
                mountPath: /var/run/secrets/com.redhat.insights/jmx-keystore
            volumes:
              - emptyDir: {}
                name: tmpdir
              - name: jmx-auth
                secret:
                  secretName: runtimes-inventory-jmx-auth
                  items:
                    - key: access
                      path: jmxremote.access
                    - key: password
                      path: jmxremote.password
                  optional: true
              - name: jmx-tls
                secret:
                  secretName: runtimes-inventory-service-cryostat-tls
                  optional: true
              - name: keystore-volume
                emptyDir: {}
            env:
              - name: QUARKUS_PROFILE
                value: ${ENV_NAME}
              - name: QUARKUS_LOG_CLOUDWATCH_ENABLED
                value: ${CLOUDWATCH_ENABLED}
              - name: CRYOSTAT_JMX_ACCESS_FILE
                value: /var/run/secrets/com.redhat.insights/jmx-auth/jmxremote.access
              - name: CRYOSTAT_JMX_PASSWORD_FILE
                value: /var/run/secrets/com.redhat.insights/jmx-auth/jmxremote.password
              - name: CRYOSTAT_KEYSTORE_FILE
                value: /var/run/secrets/com.redhat.insights/jmx-keystore/keystore.p12
              - name: CRYOSTAT_KEYSTORE_PASS
                valueFrom:
                  secretKeyRef:
                    name: runtimes-inventory-keystore-pass
                    key: KEYSTORE_PASS
              - name: CRYOSTAT_JAVA_OPTS
                value: "${CRYOSTAT_JAVA_OPTS}"
            initContainers:
              - name: pem-to-keystore
                image: registry.access.redhat.com/ubi8/openssl:${OPENSSL_IMAGE_TAG}
                env:
                  - name: KEY_FILE
                    value: /var/run/secrets/com.redhat.insights/jmx-tls/tls.key
                  - name: CERT_FILE
                    value: /var/run/secrets/com.redhat.insights/jmx-tls/tls.crt
                  - name: KEYSTORE_FILE
                    value: /var/run/secrets/com.redhat.insights/jmx-keystore/keystore.p12
                  - name: KEYSTORE_PASS
                    valueFrom:
                      secretKeyRef:
                        name: runtimes-inventory-keystore-pass
                        key: KEYSTORE_PASS
                command:
                  - /bin/bash
                args:
                  - -c
                  - openssl pkcs12 -export -inkey "${KEY_FILE}" -in "${CERT_FILE}" -out "${KEYSTORE_FILE}" -password "pass:${KEYSTORE_PASS}"
          webServices:
            metrics: {}
            private: {}
            public:
              # This can override the service name
              apiPath: insights-rbi-events
              enabled: true
        - metadata: {}
          minReplicas: ${{MIN_REPLICAS}}
          name: rest
          podSpec:
            image: quay.io/${IMAGE_NAMESPACE}/insights-rbi-rest:${IMAGE_TAG}
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /health/live
                port: 8000
                scheme: HTTP
              initialDelaySeconds: 35
              periodSeconds: 5
              successThreshold: 1
              timeoutSeconds: 120
            metadata: {}
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /health/ready
                port: 8000
                scheme: HTTP
              initialDelaySeconds: 35
              periodSeconds: 5
              successThreshold: 1
              timeoutSeconds: 120
            resources:
              limits:
                cpu: 300m
                memory: 1Gi
              requests:
                cpu: 150m
                memory: 512Mi
            volumeMounts:
              - mountPath: /tmp
                name: tmpdir
              - mountPath: /var/run/secrets/com.redhat.insights/jmx-auth
                name: jmx-auth
                readOnly: true
              - mountPath: /var/run/secrets/com.redhat.insights/jmx-tls
                name: jmx-tls
                readOnly: true
              - name: keystore-volume
                mountPath: /var/run/secrets/com.redhat.insights/jmx-keystore
            volumes:
              - emptyDir: {}
                name: tmpdir
              - name: jmx-auth
                secret:
                  secretName: runtimes-inventory-jmx-auth
                  items:
                    - key: access
                      path: jmxremote.access
                    - key: password
                      path: jmxremote.password
                  optional: true
              - name: jmx-tls
                secret:
                  secretName: runtimes-inventory-rest-cryostat-tls
                  optional: true
              - name: keystore-volume
                emptyDir: {}
            env:
              - name: QUARKUS_PROFILE
                value: ${ENV_NAME}
              - name: QUARKUS_LOG_CLOUDWATCH_ENABLED
                value: ${CLOUDWATCH_ENABLED}
              - name: CRYOSTAT_JAVA_OPTS
                value: "${CRYOSTAT_JAVA_OPTS}"
              - name: CRYOSTAT_JMX_ACCESS_FILE
                value: /var/run/secrets/com.redhat.insights/jmx-auth/jmxremote.access
              - name: CRYOSTAT_JMX_PASSWORD_FILE
                value: /var/run/secrets/com.redhat.insights/jmx-auth/jmxremote.password
              - name: CRYOSTAT_KEYSTORE_FILE
                value: /var/run/secrets/com.redhat.insights/jmx-keystore/keystore.p12
              - name: CRYOSTAT_KEYSTORE_PASS
                valueFrom:
                  secretKeyRef:
                    name: runtimes-inventory-keystore-pass
                    key: KEYSTORE_PASS
              - name: CRYOSTAT_JAVA_OPTS
                value: "${CRYOSTAT_JAVA_OPTS}"
            initContainers:
              - name: pem-to-keystore
                image: registry.access.redhat.com/ubi8/openssl:${OPENSSL_IMAGE_TAG}
                env:
                  - name: KEY_FILE
                    value: /var/run/secrets/com.redhat.insights/jmx-tls/tls.key
                  - name: CERT_FILE
                    value: /var/run/secrets/com.redhat.insights/jmx-tls/tls.crt
                  - name: KEYSTORE_FILE
                    value: /var/run/secrets/com.redhat.insights/jmx-keystore/keystore.p12
                  - name: KEYSTORE_PASS
                    valueFrom:
                      secretKeyRef:
                        name: runtimes-inventory-keystore-pass
                        key: KEYSTORE_PASS
                command:
                  - /bin/bash
                args:
                  - -c
                  - openssl pkcs12 -export -inkey "${KEY_FILE}" -in "${CERT_FILE}" -out "${KEYSTORE_FILE}" -password "pass:${KEYSTORE_PASS}"
          webServices:
            metrics: {}
            private: {}
            public:
              # This overrides the service name
              apiPath: runtimes-inventory-service
              enabled: true
      # platform.upload.runtimes-java-general
      kafkaTopics:
        - partitions: 3
          replicas: 3
          topicName: platform.upload.announce
      dependencies:
        - ingress
        - host-inventory
        - rbac
      testing:
        iqePlugin: 'runtimes-inventory'
  - apiVersion: v1
    kind: Service
    metadata:
      name: runtimes-inventory-service-cryostat
      annotations:
        service.beta.openshift.io/serving-cert-secret-name: runtimes-inventory-service-cryostat-tls
    spec:
      selector:
        pod: runtimes-inventory-service
      ports:
        - protocol: TCP
          port: 9091
          targetPort: 9091
  - apiVersion: v1
    kind: Service
    metadata:
      name: runtimes-inventory-rest-cryostat
      annotations:
        service.beta.openshift.io/serving-cert-secret-name: runtimes-inventory-rest-cryostat-tls
    spec:
      selector:
        pod: runtimes-inventory-rest
      ports:
        - protocol: TCP
          port: 9091
          targetPort: 9091

  - apiVersion: v1
    kind: Secret
    metadata:
      name: runtimes-inventory-jmx-auth
    type: Opaque
    stringData:
      access: "admin readwrite"
      password: "admin ${EPHEMERAL_JMX_PASSWORD}"
  - apiVersion: v1
    kind: Secret
    metadata:
      name: runtimes-inventory-keystore-pass
    type: Opaque
    stringData:
      KEYSTORE_PASS: "${EPHEMERAL_KEYSTORE_PASSWORD}"

parameters:
  - name: IMAGE_TAG
    value: latest
    displayName: the imageTag to deploy
  - name: IMAGE_NAMESPACE
    value: cloudservices
    displayName: the image namespace to deploy
  - name: ENV_NAME
    required: true
    value: stage
  - name: CLOUDWATCH_ENABLED
    value: "false"
    displayName: Enable Cloudwatch logging
  - name: MIN_REPLICAS
    value: "1"
    displayName: Minimum number of replicas for deployments
  - name: CRYOSTAT_JAVA_OPTS
    value: >-
      -Dcom.sun.management.jmxremote.port=9091
      -Dcom.sun.management.jmxremote.ssl=true
      -Dcom.sun.management.jmxremote.registry.ssl=true
      -Dcom.sun.management.jmxremote.authenticate=true
      -Djavax.net.ssl.keyStore=$(CRYOSTAT_KEYSTORE_FILE)
      -Djavax.net.ssl.keyStorePassword=$(CRYOSTAT_KEYSTORE_PASS)
    displayName: Java system properties for Cryostat support
  - name: OPENSSL_IMAGE_TAG
    displayName: OpenSSL UBI8 image tag
    description: Image tag for the OpenSSL init container
    value: "8.9-8"
  - name: EPHEMERAL_JMX_PASSWORD
    displayName: Remote JMX Password (Ephemeral Only)
    description: Password to connect over remote JMX on Ephemeral Environments
    generate: expression
    from: '[\w]{10}'
  - name: EPHEMERAL_KEYSTORE_PASSWORD
    displayName: Keystore Password (Ephemeral Only)
    description: Password for the Keystore used by the remote JMX server on Ephemeral Environments
    generate: expression
    from: '[\w]{10}'
