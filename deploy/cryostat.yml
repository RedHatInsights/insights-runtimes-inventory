apiVersion: v1
kind: Template
metadata:
  name: cryostat
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: cryostat
    labels:
      app.kubernetes.io/name: cryostat
      app.kubernetes.io/instance: cryostat
      app.kubernetes.io/version: "2.3.1.redhat"
  imagePullSecrets:
    - name: rh-registry-pull
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: cryostat
    labels:
      app.kubernetes.io/name: cryostat
      app.kubernetes.io/instance: cryostat
      app.kubernetes.io/version: "2.3.1.redhat"
  rules:
    - apiGroups:
        - ""
      resources:
        - endpoints
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - ""
      resources:
        - pods
        - replicationcontrollers
      verbs:
        - get
    - apiGroups:
        - apps
      resources:
        - replicasets
        - deployments
        - daemonsets
        - statefulsets
      verbs:
        - get
    - apiGroups:
        - apps.openshift.io
      resources:
        - deploymentconfigs
      verbs:
        - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: cryostat
    labels:
      app.kubernetes.io/name: cryostat
      app.kubernetes.io/instance: cryostat
      app.kubernetes.io/version: "2.3.1.redhat"
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: cryostat
  subjects:
    - kind: ServiceAccount
      name: cryostat
- apiVersion: v1
  kind: Service
  metadata:
    name: cryostat
    labels:
      app.kubernetes.io/name: cryostat
      app.kubernetes.io/instance: cryostat
      app.kubernetes.io/version: "2.3.1.redhat"
  spec:
    type: ClusterIP
    ports:
      - port: 8181
        targetPort: 8181
        protocol: TCP
        name: cryostat-http
      - port: 9091
        targetPort: 9091
        protocol: TCP
        name: jfr-jmx
    selector:
      app.kubernetes.io/name: cryostat
      app.kubernetes.io/instance: cryostat
- apiVersion: v1
  kind: Service
  metadata:
    name: cryostat-grafana
    labels:
      app.kubernetes.io/name: cryostat
      app.kubernetes.io/instance: cryostat
      app.kubernetes.io/version: "2.3.1.redhat"
  spec:
    type: ClusterIP
    ports:
      - port: 3000
        targetPort: 3000
        protocol: TCP
        name: grafana-http
    selector:
      app.kubernetes.io/name: cryostat
      app.kubernetes.io/instance: cryostat
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: cryostat
    labels:
      app.kubernetes.io/name: cryostat
      app.kubernetes.io/instance: cryostat
      app.kubernetes.io/version: "2.3.1.redhat"
  spec:
    selector:
      matchLabels:
        app.kubernetes.io/name: cryostat
        app.kubernetes.io/instance: cryostat
    replicas: ${{CRYOSTAT_REPLICAS}}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app.kubernetes.io/name: cryostat
          app.kubernetes.io/instance: cryostat
      spec:
        serviceAccountName: cryostat
        securityContext:
          runAsNonRoot: true
        containers:
          - name: cryostat
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL
            image: registry.redhat.io/cryostat-tech-preview/cryostat-rhel8:${CRYOSTAT_IMAGE_TAG}
            imagePullPolicy: IfNotPresent
            env:
              - name: NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              - name: CRYOSTAT_WEB_PORT
                value: "8181"
              - name: CRYOSTAT_CONFIG_PATH
                value: /opt/cryostat.d/conf.d
              - name: CRYOSTAT_ARCHIVE_PATH
                value: /opt/cryostat.d/recordings.d
              - name: CRYOSTAT_TEMPLATE_PATH
                value: /opt/cryostat.d/templates.d
              - name: CRYOSTAT_CLIENTLIB_PATH
                value: /opt/cryostat.d/clientlib.d
              - name: CRYOSTAT_PROBE_TEMPLATE_PATH
                value: /opt/cryostat.d/probes.d
              - name: CRYOSTAT_EXT_WEB_PORT
                value: "443"
              - name: CRYOSTAT_WEB_HOST
                value: "cryostat-$(NAMESPACE).${ROUTE_DOMAIN}"
              - name: CRYOSTAT_PLATFORM
                value: io.cryostat.platform.internal.KubeApiPlatformStrategy
              - name: CRYOSTAT_AUTH_MANAGER
                value: ${CRYOSTAT_AUTH_MANAGER}
              - name: GRAFANA_DATASOURCE_URL
                value: http://127.0.0.1:8080
              - name: GRAFANA_DASHBOARD_URL
                value: "https://cryostat-grafana-$(NAMESPACE).${ROUTE_DOMAIN}"
              - name: CRYOSTAT_DISABLE_SSL
                value: "true"
              - name: CRYOSTAT_DISABLE_JMX_AUTH
                value: "true"
              - name: CRYOSTAT_ALLOW_UNTRUSTED_SSL
                value: "true"
              - name: CRYOSTAT_ENABLE_JDP_BROADCAST
                value: "false"
              - name: CRYOSTAT_K8S_NAMESPACES
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              - name: CRYOSTAT_SSL_PROXIED
                value: "true"
              - name: CRYOSTAT_JMX_CREDENTIALS_DB_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: cryostat-jmx-credentials-db
                    key: CRYOSTAT_JMX_CREDENTIALS_DB_PASSWORD
                    optional: false
              - name: CRYOSTAT_JDBC_URL
                value: jdbc:h2:file:/opt/cryostat.d/conf.d/h2;INIT=create domain if not exists jsonb as varchar
              - name: CRYOSTAT_HBM2DDL
                value: update
              - name: CRYOSTAT_JDBC_DRIVER
                value: org.h2.Driver
              - name: CRYOSTAT_HIBERNATE_DIALECT
                value: org.hibernate.dialect.H2Dialect
              - name: CRYOSTAT_JDBC_USERNAME
                value: cryostat
              # Unused with H2 Database
              - name: CRYOSTAT_JDBC_PASSWORD
                value: cryostat
            ports:
              - containerPort: 8181
                protocol: TCP
              - containerPort: 9090
                protocol: TCP
              - containerPort: 9091
                protocol: TCP
            livenessProbe:
              httpGet:
                path: "/health/liveness"
                port: 8181
            startupProbe:
              httpGet:
                path: "/health/liveness"
                port: 8181
              failureThreshold: 18
            resources:
              requests:
                cpu: "500m"
                memory: "512Mi"
              limits:
                cpu: "1"
                memory: "1Gi"
            volumeMounts:
              - mountPath: /opt/cryostat.d/conf.d
                name: cryostat
                subPath: config
              - mountPath: /opt/cryostat.d/recordings.d
                name: cryostat
                subPath: flightrecordings
              - mountPath: /opt/cryostat.d/templates.d
                name: cryostat
                subPath: templates
              - mountPath: /opt/cryostat.d/clientlib.d
                name: cryostat
                subPath: clientlib
              - mountPath: /opt/cryostat.d/probes.d
                name: cryostat
                subPath: probes
              - mountPath: /opt/cryostat.d/conf.d/cryostat-users.properties
                name: basic-auth-properties
                subPath: cryostat-users.properties
                readOnly: true
              - mountPath: /truststore/openshift
                name: trusted-certs
                readOnly: true
          - name: cryostat-grafana
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL
            image: registry.redhat.io/cryostat-tech-preview/cryostat-grafana-dashboard-rhel8:${CRYOSTAT_GRAFANA_IMAGE_TAG}
            imagePullPolicy: IfNotPresent
            env:
              - name: JFR_DATASOURCE_URL
                value: http://127.0.0.1:8080
            envFrom:
            - secretRef:
                name: cryostat-grafana-basic
            ports:
              - containerPort: 3000
                protocol: TCP
            livenessProbe:
              httpGet:
                path: /api/health
                port: 3000
            resources:
              requests:
                cpu: "100m"
                memory: "128Mi"
              limits:
                cpu: "200m"
                memory: "256Mi"
          - name: cryostat-jfr-datasource
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL
            image: registry.redhat.io/cryostat-tech-preview/jfr-datasource-rhel8:${JFR_DATASOURCE_IMAGE_TAG}
            imagePullPolicy: IfNotPresent
            env:
              - name: LISTEN_HOST
                value: 127.0.0.1
            ports:
              - containerPort: 8080
                protocol: TCP
            livenessProbe:
              exec:
                command:
                  - curl
                  - --fail
                  - http://127.0.0.1:8080
            resources:
              requests:
                cpu: "300m"
                memory: "512Mi"
              limits:
                cpu: "600m"
                memory: "1Gi"
        volumes:
          - name: cryostat
            persistentVolumeClaim:
              claimName: cryostat
          - name: basic-auth-properties
            secret:
              secretName: cryostat-users
              items:
                - key: properties
                  path: cryostat-users.properties
          - name: trusted-certs
            projected:
              sources:
                - configMap:
                    name: cryostat-ca-bundle
                    items:
                      - key: service-ca.crt
                        path: openshift-ca-bundle.crt
                        mode: 0440

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: cryostat
    labels:
      app.kubernetes.io/name: cryostat
      app.kubernetes.io/instance: cryostat
      app.kubernetes.io/version: "2.3.1.redhat"
  spec:
    to:
      kind: Service
      name: cryostat
    port:
      targetPort: 8181
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: cryostat-grafana
    labels:
      app.kubernetes.io/name: cryostat
      app.kubernetes.io/instance: cryostat
      app.kubernetes.io/version: "2.3.1.redhat"
  spec:
    to:
      kind: Service
      name: cryostat-grafana
    port:
      targetPort: 3000
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: cryostat
    labels:
      app.kubernetes.io/name: cryostat
      app.kubernetes.io/instance: cryostat
      app.kubernetes.io/version: "2.3.1.redhat"
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: "${CRYOSTAT_STORAGE_SIZE}"

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: cryostat-ca-bundle
    labels:
      app.kubernetes.io/name: cryostat
      app.kubernetes.io/instance: cryostat
      app.kubernetes.io/version: "2.3.1.redhat"
    annotations:
      service.beta.openshift.io/inject-cabundle: "true"

- apiVersion: v1
  kind: Secret
  metadata:
    name: cryostat-jmx-credentials-db
    labels:
      app.kubernetes.io/name: cryostat
      app.kubernetes.io/instance: cryostat
      app.kubernetes.io/version: "2.3.1.redhat"
  type: Opaque
  stringData:
    CRYOSTAT_JMX_CREDENTIALS_DB_PASSWORD: "${EPHEMERAL_DB_PASSWORD}"

- apiVersion: v1
  kind: Secret
  metadata:
    name: cryostat-users
    labels:
      app.kubernetes.io/name: cryostat
      app.kubernetes.io/instance: cryostat
      app.kubernetes.io/version: "2.3.1.redhat"
  type: Opaque
  stringData:
    properties: "${EPHEMERAL_CRYOSTAT_USER_PROPERTIES}"

- apiVersion: v1
  kind: Secret
  metadata:
    name: cryostat-grafana-basic
    labels:
      app.kubernetes.io/name: cryostat
      app.kubernetes.io/instance: cryostat
      app.kubernetes.io/version: "2.3.1.redhat"
  type: Opaque
  stringData:
    GF_SECURITY_ADMIN_USER:     "admin"
    GF_SECURITY_ADMIN_PASSWORD: "${EPHEMERAL_GRAFANA_PASSWORD}"

parameters:
  - name: ROUTE_DOMAIN
    displayName: Route Domain
    description: Default domain for routes created in this cluster
  - name: CRYOSTAT_IMAGE_TAG
    value: 2.3.1-10
    displayName: Cryostat Image Tag
    description: The main Cryostat image tag to deploy
  - name: JFR_DATASOURCE_IMAGE_TAG
    value: 2.3.1-10
    displayName: JFR Data Source Image Tag
    description: The JFR Data Source image tag to deploy
  - name: CRYOSTAT_GRAFANA_IMAGE_TAG
    value: 2.3.1-10
    displayName: Grafana Dashboard Image Tag
    description: The main Cryostat Grafana dashboard image tag to deploy
  - name: EPHEMERAL_DB_PASSWORD
    displayName: Credentials Database Password (Ephemeral Only)
    description: Password for Cryostat's credentials database for Ephemeral Environments
    generate: expression
    from: '[\w\A]{10}'
  - name: EPHEMERAL_CRYOSTAT_USER_PROPERTIES
    displayName: Cryostat credentials property file (Ephemeral Only)
    description: Java properties file containing user indentities of the form `<username>=<sha256 password>` for Ephemeral Environments
    # user=pass
    value: 'user=d74ff0ee8da3b9806b18c877dbf29bbde50b5bd8e4dad7a3a725000feb82e8f1'
  - name: EPHEMERAL_GRAFANA_PASSWORD
    displayName: Cryostat Grafana Password (Ephemeral Only)
    description: Password for Cryostat's credentials database for Ephemeral Environments
    value: pass
  - name: CRYOSTAT_REPLICAS
    displayName: Cryostat Replicas
    description: Number of replicas for Cryostat deployment (should be 0 or 1)
    value: "1"
  - name: CRYOSTAT_AUTH_MANAGER
    value: io.cryostat.net.BasicAuthManager
    displayName: Authentication/authorization manager used for validating user access
  - name: CRYOSTAT_STORAGE_SIZE
    value: 500Mi
    displayName: Cryostat PVC Size
    description: Size in bytes of the Cryostat Persistent Volume Claim. Expressed as a Kubernetes Quantity.
